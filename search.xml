<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[使用TinyORM連接DB]]></title>
      <url>%2F2017%2F04%2F25%2F%E4%BD%BF%E7%94%A8TinyORM%E9%80%A3%E6%8E%A5DB%2F</url>
      <content type="text"><![CDATA[TinyORM&#x662F;&#x524D;&#x5E7E;&#x5929;&#x770B;&#x5230; This week in .Net&#x4ECB;&#x7D39;&#x7684;&#x65B0;&#x7684;ORM Framework &#x60F3;&#x8AAA;&#x633A;&#x6709;&#x8DA3;&#x7684;&#xFF0C;&#x5C31;&#x8DDF;&#x8457;Wiki&#x5728;.Net 4.5.2&#x642D;&#x914D;localdb&#x505A;&#x4E86;&#x500B;demo &#x57FA;&#x672C;&#x7684;&#x67E5;&#x8A62;&#x6307;&#x4EE4;12345678var db = DbContext.CreateDbContext (&quot;Data Source=(localdb)\\mssqllocaldb;;Initial Catalog=tempdb;&quot; + &quot;Integrated Security=True;Pooling=true;Max Pool Size=3000;&quot;);var rows = db.QueryAsync(&quot;select [Answer] = 2 + 3&quot;).Result;Console.WriteLine(rows[0].Answer); //&#x7528;&#x6B04;&#x4F4D;&#x540D;&#x7A31;&#x53D6;&#x503C;Console.WriteLine(rows[0][&quot;Answer&quot;]); //&#x7528;&#x6B04;&#x4F4D;&#x540D;&#x7A31;&#x53D6;&#x503C;Console.WriteLine(rows[0][0]); //&#x7528;&#x6B04;&#x4F4D;Index&#x53D6;&#x503C; &#x7D50;&#x679C;&#xFF1A; &#x5C0D;&#x61C9;&#x5230;&#x5DF2;&#x5B58;&#x5728;&#x7684;&#x985E;&#x5225;1234public class POCO{ public int Answer { get; set; }} 123456// &#x53EA;&#x9700;&#x8981;&#x6488;&#x5F1F;&#x4E00;&#x7B46;&#x7D00;&#x9304;&#x7684;&#x72C0;&#x6CC1;var rows = db.QueryAsync(&quot;select [Answer] = 2 + 3&quot;).Result;var poco = (rows[0] as RowStore).ToObject&lt;POCO&gt;();var pocoViaFactory = (rows[0] as RowStore).ToObject(() =&gt; new POCO());Console.WriteLine(poco.Answer); // 5Console.WriteLine(pocoViaFactory.Answer); // 5 1234567// &#x8981;&#x6488;&#x51FA;&#x6240;&#x6709;object idvar ids = db.QueryAsync(&quot;select [Answer] = object_id from sys.objects;&quot;).Result;var pocoArray = ids.ToObjectArray&lt;POCO&gt;();var pocoArrayViaFactory = ids.ToObjectArray(() =&gt; new POCO());for (var i = 0; i &lt; pocoArray.Length; ++i) Console.WriteLine(ids[i].Answer);Console.WriteLine(string.Empty); // &#x6545;&#x610F;&#x5370;&#x4E00;&#x884C;&#x7A7A;&#x767D;&#x5206;&#x9694;&#x4E0A;&#x4E0B;&#x57F7;&#x884C;&#x7D50;&#x679C;for (var i = 0; i &lt; pocoArrayViaFactory.Length; ++i) Console.WriteLine(ids[i].Answer); &#x53C3;&#x6578;&#x5316;&#x67E5;&#x8A0A;&#x642D;&#x914D;&#x533F;&#x540D;&#x7269;&#x4EF6;1234567var ids1 = db.QueryAsync( &quot;select [Answer] = object_id from sys.objects where object_id between @low and @high;&quot;, new { @low = 10, @high = 40 }).Result;foreach (var ids in ids1){ Console.WriteLine(ids.Answer);} &#x53C3;&#x6578;&#x5316;&#x67E5;&#x8A0A;&#x642D;&#x914D;Where In1234// &#x8ACB;&#x8B93;&#x6211;&#x5077;&#x61F6;&#x4E0D;&#x622A;&#x67E5;&#x8A62;&#x7D50;&#x679C;&#x4E86;XDvar ids2 = db.QueryAsync( &quot;select [Answer] = object_id from sys.objects where object_id in (@range)&quot;, new { @range = Enumerable.Range(1, 40) }).Result; &#x53C3;&#x6578;&#x5316;&#x67E5;&#x8A0A;&#x689D;&#x4EF6;&#x70BA;NULL12345678var emptyResult = db.QueryAsync( &quot;select [Answer] = object_id from sys.objects where object_id = @id&quot;, new { @id = default(int?) }).Result; // &#x6216;&#x662F;&#x7528; @id = (int?)nullConsole.WriteLine(&quot;Result Count: &quot; + emptyResult.Count);foreach (var ids in emptyResult){ Console.WriteLine(ids.Answer);} &#x53C3;&#x6578;&#x5316;&#x67E5;&#x8A0A;&#x642D;&#x914D;Dictionary123456789// &#x8ACB;&#x8B93;&#x6211;&#x5077;&#x61F6;&#x4E0D;&#x622A;&#x67E5;&#x8A62;&#x7D50;&#x679C;&#x4E86;XDvar parameters = new Dictionary&lt;string, object&gt; { { &quot;@low&quot;, 10 }, { &quot;@high&quot;, 40 } };var idsDict = db.QueryAsync( &quot;select [Answer] = object_id from sys.objects where object_id between @low and @high;&quot;, parameters).Result;foreach (var ids in idsDict){ Console.WriteLine(ids.Answer);} &#x6B04;&#x4F4D;&#x540D;&#x7A31;&#x5927;&#x5C0F;&#x5BEB;&#x662F;&#x6709;&#x5DEE;&#x5225;123var rows = db.QueryAsync(&quot;select [Answer] = 2 + 3&quot;).Result;Console.WriteLine(rows[0].Answer is FieldNotFound); // FalseConsole.WriteLine(rows[0].answer is FieldNotFound); // True &#x4F7F;&#x7528;TinyORM&#x63D0;&#x4F9B;&#x7684;RowStore&#x986F;&#x793A;&#x8CC7;&#x6599;123var row = db.QueryAsync(&quot;select * from sys.objects&quot;).Result.First();foreach (var column in row) Console.WriteLine(&quot;[{0}] [{1}]&quot;, column.Key, (column.Value ?? &quot;[NULL]&quot;).ToString()); &#x4F7F;&#x7528;TinyORM&#x63D0;&#x4F9B;&#x7684;RowStore&#x4E26;&#x7528;row.ToString()&#x986F;&#x793A;&#x8CC7;&#x6599;12var row = db.QueryAsync(&quot;select * from sys.objects&quot;).Result.First();Console.WriteLine(row); // &#x9810;&#x8A2D;&#x6703;&#x547C;&#x53EB;row.ToString() &#x4F7F;&#x7528;&#x533F;&#x540D;&#x7269;&#x4EF6;&#x63A5;&#x6536;result123var rows = db.QueryAsync(&quot;select top (4) * from sys.objects&quot;).Result;foreach (var row in rows) Console.WriteLine(new { Name = (string)row.name, ObjectId = (int)row.object_id }); Link Quick start - TinyORM]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[讓Visual Studio Team Services來幫忙建置hexo]]></title>
      <url>%2F2016%2F11%2F26%2FIntegrate-hexo-with-Visual-Studio-Online%2F</url>
      <content type="text"><![CDATA[&#x9996;&#x5148;&#xFF0C;&#x5148;&#x5728;Visual Studio Team Services&#x4E0A;&#x9762;&#x8981;&#x6709;&#x5E33;&#x865F;&#xFF0C;&#x800C;&#x4E14;&#x8981;&#x958B;&#x4E00;&#x500B;&#x65B0;&#x7684;&#x5C08;&#x6848; &#x7136;&#x5F8C;&#x539F;&#x672C;&#x82E5;hexo&#x9084;&#x6C92;&#x6709;&#x653E;&#x5230;git&#x4E0A;&#x7684;&#x8A71;&#xFF0C;&#x770B;&#x8981;&#x4E0D;&#x8981;&#x8003;&#x616E;&#x76F4;&#x63A5;&#x5728;&#x4ED6;&#x7684;Code&#x88E1;&#x9762;&#x958B;&#x4E00;&#x500B;&#x65B0;&#x7684;repository &#x9078;&#x5B8C;&#x5F8C;&#xFF0C;&#x5230;Build &amp; Release&#xFF0C;&#x4E26;&#x6309;&#x53F3;&#x908A;&#x7684;+ New&#x6309;&#x9215;&#xFF0C;&#x9019;&#x6642;&#x61C9;&#x8A72;&#x6703;&#x8DF3;&#x51FA;Create new build definition&#xFF0C;&#x8ACB;&#x9078;&#x64C7;&#x6700;&#x4E0B;&#x9762;&#x7684;Empty &#x5982;&#x679C;&#x525B;&#x525B;&#x8DDF;&#x7B46;&#x8005;&#x4E00;&#x6A23;&#xFF0C;&#x5DF2;&#x7D93;&#x5728;Visual Studio Team Services&#x958B;&#x4E86;Repo&#x7684;&#x8A71;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5728;&#x9019;&#x88E1;&#x9078;Repository&#x8207;Default branch&#x5982;&#x679C;&#x8981;&#x8B93;&#x4ED6;&#x6BCF;&#x6B21;commit&#x5F8C;&#x5C31;&#x81EA;&#x52D5;build&#xFF0C;&#x8A18;&#x5F97;&#x8981;&#x628A;Continuous integration&#x6253;&#x52FE;&#xFF0C;&#x9078;&#x5B8C;&#x5F8C;&#x6309;Create&#x82E5;&#x662F;&#x653E;&#x5728;GitHub&#x4E0A;&#xFF0C;&#x8ACB;&#x9078;GitHub&#x653E;&#x5728;bitbucket&#x6216;&#x662F;&#x5176;&#x4ED6;git repository&#xFF0C;&#x5C31;&#x9078;&#x64C7;Remote Git Repository&#x8B93;&#x7B46;&#x8005;&#x6BD4;&#x8F03;&#x610F;&#x5916;&#x7684;&#x662F;&#x9084;&#x53EF;&#x4EE5;&#x9078;SVN &#x597D;&#x4E86;&#x4E4B;&#x5F8C;&#xFF0C;&#x61C9;&#x8A72;&#x6703;&#x8DF3;&#x51FA;&#x4E0B;&#x9762;&#x90A3;&#x500B;&#x756B;&#x9762;&#xFF0C;&#x8ACB;&#x6309;Add build step &#x9019;&#x6642;&#xFF0C;&#x6703;&#x8DF3;&#x51FA;Task catalog&#xFF0C;&#x7136;&#x5F8C;&#x8ACB;&#x5728;&#x5DE6;&#x908A;&#x7684;&#x9078;&#x55AE;&#x9078;All&#x5F8C;&#xFF0C;&#x627E;&#x5230;npm&#xFF0C;&#x4E26;&#x6309;Add &#x6309;&#x5B8C;&#x5F8C;&#xFF0C;Build Steps&#x6703;&#x52A0;&#x5165;&#x4E00;&#x500B;npm install&#xFF0C;&#x7136;&#x5F8C;&#x8ACB;&#x6309;Close&#x95DC;&#x9589;Task catalog &#x7136;&#x5F8C;&#x9078;&#x4E86;&#x525B;&#x525B;&#x65B0;&#x5EFA;&#x7684;build step&#x5F8C;&#xFF0C;&#x53F3;&#x908A;&#x6703;&#x8DF3;&#x51FA;&#x9019;&#x500B;Step&#x7684;&#x8A73;&#x7D30;&#x8CC7;&#x8A0A; &#x5728;npm command&#x586B;&#x5165;install(&#x7B49;&#x65BC;&#x5728;&#x672C;&#x6A5F;&#x4E0A;&#x8DD1;npm install) &#x7136;&#x5F8C;&#x518D;&#x52A0;&#x5165;&#x4E00;&#x500B;&#x65B0;&#x7684;Build step(&#x8DDF;&#x525B;&#x525B;&#x4E00;&#x6A23;&#x9078;npm) &#x52A0;&#x5165;&#x5F8C;&#xFF0C;&#x4E00;&#x6A23;&#x5728;steps&#x4E2D;&#x9078;&#x4ED6;&#xFF0C;&#x7136;&#x5F8C;&#x53F3;&#x908A;&#x7684;&#x8A73;&#x7D30;&#x8CC7;&#x8A0A;&#x4E2D;&#x586B;&#x7684;&#x4E0B;&#x5716;&#x4E00;&#x6A23; &#x52A0;&#x5165;&#x4E00;&#x500B;npm&#x7684;build step&#xFF0C;npm command&#x4E00;&#x6A23;&#x653E;install&#xFF0C;&#x4F46;&#x662F;arguments&#x653E;hexo --save &#x52A0;&#x5165;&#x4E00;&#x500B;Command Line&#x7684;Build Step(&#x53EF;&#x4EE5;&#x5728;Task catalog&#x4E2D;&#x7684;Utility&#x4E2D;&#x627E;&#x5230;)&#x586B;&#x5165;&#x5167;&#x5BB9;&#x5982;&#x4E0B; &#x6700;&#x5F8C;&#x518D;&#x52A0;&#x5165;&#x4E00;&#x500B;Command Line&#x7684;Build Step&#xFF0C;Tool&#x4E00;&#x6A23;&#x662F;C:/NPM/Modules/hexo&#xFF0C;Arguments&#x70BA;deploy &#x4E0D;&#x904E;&#x7576;&#x7136;&#x8A18;&#x5F97;&#x8981;&#x5148;&#x628A;&#x76F8;&#x95DC;hexo&#x7684;&#x76F8;&#x95DC;deploy&#x8CC7;&#x8A0A;&#x5BEB;&#x5728;_config.yml&#x4E2D;&#xFF0C;&#x4E0D;&#x7136;&#x4E5F;&#x662F;&#x6C92;&#x7528;XD&#x201D; &#x90FD;&#x5B8C;&#x6210;&#x5F8C;&#xFF0C;&#x8A18;&#x5F97;&#x8981;&#x6309;&#x5DE6;&#x4E0A;&#x65B9;&#x7684;Save&#xFF0C;&#x7136;&#x5F8C;&#x518D;&#x6309;&#x53F3;&#x4E0A;&#x65B9;&#x7684;Queue new build...&#x8A66;&#x8A66;&#x770B;&#x4E86;&#xFF5E;&#xFF5E;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[在Visual Studio Code中使用MSSQL]]></title>
      <url>%2F2016%2F11%2F24%2FVSCode-with-MSSQL%2F</url>
      <content type="text"><![CDATA[&#x4E0A;&#x4E00;&#x7BC7;&#x8B1B;&#x4E86;&#x5728;Mac&#x4E0A;&#x7528;docker&#x5B89;&#x88DD;mssql&#xFF0C;&#x9019;&#x7BC7;&#x4F86;&#x8AAA;&#x600E;&#x9EBC;&#x7528;Visual Studio Code&#x4E0B;sql cmd &#x9996;&#x5148;&#xFF0C;&#x7576;&#x7136;&#x8981;&#x5148;&#x6709;VSCode&#x4E86; &#x63A5;&#x4E0B;&#x4F86;&#x6309;ctrl+shift+p (Mac&#x7684;&#x8A71;&#x5C31;&#x662F;command+shift+p) &#x7136;&#x5F8C;&#x9078;&#x64C7;install extension (&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x6253;install&#x7E2E;&#x5C0F;&#x641C;&#x5C0B;&#x7BC4;&#x570D;) &#x9078;&#x5B8C;&#x5F8C;&#xFF0C;&#x5DE6;&#x908A;&#x5C31;&#x6703;&#x8DF3;&#x51FA;&#x4E00;&#x500B;extensions&#x7684;&#x8996;&#x7A97; &#x518D;&#x8F38;&#x5165;mssql&#xFF0C;&#x5C31;&#x6703;&#x770B;&#x5230;&#xFF0C;&#x6709;&#x5169;&#x500B;&#xFF0C;&#x9078;owner&#x662F;Microsoft&#x7684;&#x5F8C;&#xFF0C;&#x6309;install &#x5B89;&#x88DD;&#x5F8C;&#xFF0C;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x555F;&#x52D5;Visual Studio Code&#x624D;&#x884C; &#x88DD;&#x597D;&#x4E4B;&#x5F8C;&#xFF0C;&#x4E00;&#x6A23;&#x5148;&#x6309;ctrl+shift+p&#xFF0C;&#x7136;&#x5F8C;&#x6253;&#x9032;sql&#x5F8C;&#x6703;&#x5217;&#x51FA;&#x76F8;&#x95DC;&#x7684;&#x6307;&#x4EE4; &#x7576;&#x7136;&#x8981;&#x5148;&#x5F9E;connect&#x958B;&#x59CB;&#x4E86;&#x2026;&#x4E00;&#x958B;&#x59CB;&#x6703;&#x5148;&#x8AAA;&#xFF0C;&#x6703;&#x628A;&#x76EE;&#x524D;&#x7684;&#x7DE8;&#x8F2F;&#x8A9E;&#x8A00;&#x6539;&#x6210;sql&#xFF0C;&#x5C31;&#x6539;&#x5427;QQ &#x7136;&#x5F8C;&#x9078;Create connection profile &#x4F9D;&#x5E8F;&#x8F38;&#x5165; Server Name (&#x6C92;&#x610F;&#x5916;&#x7684;&#x8A71;&#x8F38;&#x5165;localhost&#x5C31;&#x597D;) Database Name(&#x53EF;&#x6309;enter&#x8DF3;&#x904E;) User Name(&#x8F38;&#x5165;sa) Password(&#x8F38;&#x5165;&#x555F;&#x52D5;sql&#x7684;docker&#x6642;&#x8A2D;&#x5B9A;&#x7684;&#x90A3;&#x4E32;&#x5BC6;&#x78BC;) &#x662F;&#x5426;&#x8981;&#x5B58;&#x5BC6;&#x78BC;(&#x8981;&#x4E0D;&#x8981;yes&#x5C31;&#x898B;&#x4EC1;&#x898B;&#x667A;&#x4E86;) &#x70BA;&#x9019;&#x500B;profile&#x53D6;&#x500B;&#x540D;&#x5B57;(&#x53EF;&#x6309;enter&#x8DF3;&#x904E;) &#x90FD;&#x597D;&#x4E86;&#x4E4B;&#x5F8C;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x53C8;&#x4E0B;&#x65B9;&#x6AA2;&#x67E5;&#x662F;&#x4E0D;&#x662F;&#x6709;&#x9023;&#x7DDA;&#x6210;&#x529F;&#x4E86; &#x958B;&#x500B;&#x65B0;&#x6A94;&#x6848;&#x5F8C;&#xFF0C;&#x5728;&#x53F3;&#x4E0B;&#x65B9;&#x7684;&#x6A94;&#x6848;&#x985E;&#x578B;&#x628A;&#x4ED6;&#x63DB;&#x6210;sql(&#x539F;&#x672C;&#x662F;plain text) &#x7136;&#x5F8C;&#xFF0C;&#x76F4;&#x63A5;&#x8F38;&#x5165; 1SELECT * FROM sys.databases; &#x6309;ctrl+shift+p&#x5F8C;&#xFF0C;&#x5148;&#x8F38;&#x5165;sql&#x5F8C;&#xFF0C;&#x9078;&#x64C7;Execute Query &#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x8F38;&#x51FA;&#x7D50;&#x679C;&#x4E86; Link Use the mssql extension for Visual Studio Code]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[在Mac上用Docker跑Sql Server vNext]]></title>
      <url>%2F2016%2F11%2F23%2FInstall-sql-server-by-docker-on-mac%2F</url>
      <content type="text"><![CDATA[Sql Server v.Next Public Preview&#x91CB;&#x51FA;&#x4E86;&#xFF01; &#x9019;&#x908A;&#x662F;&#x8A18;&#x9304;&#x600E;&#x9EBC;&#x5B89;&#x88DD;&#xFF5E; &#x9996;&#x5148;&#xFF0C;&#x5148;&#x53BB;&#x88DD;Docker &#x88DD;&#x597D;&#x5F8C;&#xFF0C;&#x8A18;&#x5F97;&#x5148;&#x628A;Docker&#x7684;RAM&#x8A2D;&#x5B9A;&#x6210;4G(Sql Server&#x8981;&#x6C42;&#x7684;) &#x7136;&#x5F8C;&#x8DD1;&#x4EE5;&#x4E0B;&#x6307;&#x4EE4; 1sudo docker pull microsoft/mssql-server-linux &#x7136;&#x5F8C;&#x5C31;&#x6703;&#x770B;&#x5230;&#x4ED6;&#x5728;&#x6293;&#x6A94;&#x6848;&#x2026; &#x6293;&#x5B8C;&#x4E86;&#xFF0C;&#x88DD;&#x597D;&#x4E86;&#xFF0C;&#x60F3;&#x958B;&#x59CB;&#x8DD1;&#x4E86;&#x55CE;&#xFF1F;&#x6307;&#x4EE4;&#x5982;&#x4E0B;(&#x8A18;&#x5F97;&#x628A;&#x88E1;&#x9762;&#x7684;&lt;YourStrong!Passw0rd&gt;&#x63DB;&#x6210;&#x81EA;&#x8A02;&#x5BC6;&#x78BC;) 1docker run -e &apos;ACCEPT_EULA=Y&apos; -e &apos;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&apos; -p 1433:1433 -d microsoft/mssql-server-linux &#x5982;&#x679C;&#x60F3;&#x628A;&#x4F7F;&#x7528;&#x5B8C;&#x7684;&#x8CC7;&#x6599;&#x5B58;&#x4E0B;&#x4F86;&#xFF0C;&#x5C31;&#x8981;&#x52A0;&#x4E0A;&#x8F38;&#x51FA;&#x8CC7;&#x6599;&#x593E;&#x7684;&#x53C3;&#x6578; -v &lt;host directory&gt;:/var/opt/mssql(&#x7BC4;&#x4F8B;&#x4E2D;&#x662F;&#x8F38;&#x51FA;&#x5230;/var/opt/mssql) 1sudo docker run -e &apos;ACCEPT_EULA=Y&apos; -e &apos;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&apos; -p 1433:1433 -v &lt;host directory&gt;:/var/opt/mssql -d microsoft/mssql-server-linux &#x984C;&#x5916;&#x8A71;&#xFF0C;&#x76EE;&#x524D;&#x4E0D;&#x5141;&#x8A31;&#x628A;&#x8F38;&#x51FA;&#x8CC7;&#x6599;&#x593E;&#x8A2D;&#x5230;&#x4E00;&#x500B;volumn&#x5E95;&#x4E0B;(mac&#x7248;&#x8207;linux&#x7248;) Link Run the SQL Server Docker image on Linux, Mac, or Windows]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Ubuntu 裝Java 8 (JDK 8 / JRE 8)]]></title>
      <url>%2F2016%2F11%2F22%2FInstall-Java-8-on-Ubuntu%2F</url>
      <content type="text"><![CDATA[&#x9019;&#x7B97;&#x662F;&#x820A;&#x6587;&#x4E86;&#x525B;&#x597D;&#x7FFB;&#x5230;&#x4EE5;&#x524D;&#x7684;blog&#x5C31;&#x628A;&#x4ED6;&#x6574;&#x7406;&#x904E;&#x4F86; &#x5B89;&#x88DD;&#x6B65;&#x9A5F;&#xFF1A; &#x5B89;&#x88DD;Java 8 123sudo add-apt-repository ppa:webupd8team/javasudo apt-get updatesudo apt-get install oracle-java8-installer &#x6AA2;&#x67E5;&#x5B89;&#x88DD;&#x7248;&#x672C; &#x53EA;&#x5B89;&#x88DD;JRE 1java -version &#x6703;&#x986F;&#x793A; 1java version &quot;1.8.o_xx&quot; &#x6709;&#x88DD;JDK 1javac -version &#x6703;&#x986F;&#x793A; 1javac &quot;1.8.o_xx&quot; &#x628A;&#x4E00;&#x4E9B;&#x74B0;&#x5883;&#x8B8A;&#x6578;&#x8A2D;&#x5B9A;&#x597D;(&#x50CF;&#x662F;classpath, java_home&#x4E4B;&#x985E;) 1sudo apt-get install oracle-java8-set-default Link [http://www.webupd8.org/2012/09/install-oracle-java-8-in-ubuntu-via-ppa.html]]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Backup IIS site to location in IIS config by using msdeploy.exe]]></title>
      <url>%2F2016%2F11%2F11%2Fbackup-iis-application-by-cmd%2F</url>
      <content type="text"><![CDATA[&#x4F7F;&#x7528;msdeploy.exe -verb:sync -source:backupManager={siteName} -dest:backupManager={siteName}&#x5C31;&#x53EF;&#x4EE5;&#x5728;IIS&#x5DF2;&#x7D93;&#x8A2D;&#x5B9A;&#x597D;&#x7684;backupPath&#x4E2D;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;package(zip&#x683C;&#x5F0F;)&#x6240;&#x6709;&#x7684;&#x76F8;&#x95DC;&#x53C3;&#x6578;(&#x4F8B;&#x5982;&#xFF1A;&#x6700;&#x591A;&#x7559;&#x5E7E;&#x500B;&#x5099;&#x4EFD;&#x3001;&#x5099;&#x4EFD;&#x4F4D;&#x7F6E;)&#x90FD;&#x5403;&#x5DF2;&#x7D93;&#x8A2D;&#x5B9A;&#x5230;ApplicationHost.config&#x88E1;&#x9762;&#x7684;&#x53C3;&#x6578;&#x4E4B;&#x5F8C;&#x82E5;&#x6709;&#x9700;&#x8981;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x7528;&#x9019;&#x500B;package&#x9084;&#x539F;&#x56DE;&#x4F86; Link Web Deploy Automatic Backups]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[ScriptC# - 在ScriptC#中使用NuGet]]></title>
      <url>%2F2016%2F10%2F27%2Fusing-NuGet-in-Script-CSharp%2F</url>
      <content type="text"><![CDATA[&#x5047;&#x8A2D;&#x73FE;&#x5728;&#x6211;&#x5011;&#x8981;&#x5F9E;NuGet&#x5B89;&#x88DD;Json.Net 1scriptcs -install Newtonsoft.Json -p 8.0.3 -p &#x8868;&#x793A;&#x6307;&#x5B9A;&#x7248;&#x672C; &#x8981;&#x7279;&#x5225;&#x6307;&#x5B9A;&#x662F;&#x6709;&#x539F;&#x56E0;&#x7684;&#x4E4B;&#x524D;&#x6E2C;&#x8A66;&#x6642;&#xFF0C;&#x4E0D;&#x6307;&#x5B9A;&#x7248;&#x672C;(&#x9810;&#x8A2D;9.0.1)&#x5F8C;&#xFF0C;&#x767C;&#x73FE;&#x7121;&#x6CD5;&#x5B89;&#x88DD;&#x6703;&#x8DF3;&#x51FA;InavlidOperationException&#x4E0A;&#x7DB2;&#x67E5;&#x8CC7;&#x6599;&#x5F8C;&#xFF0C;&#x6709;&#x4EBA;&#x8B1B;&#x5230;&#x6307;&#x5B9A;&#x7248;&#x672C;&#x5230;8.0.3&#x5C31;&#x53EF;&#x4EE5;&#x5B89;&#x88DD;&#x64DA;&#x8AAA;&#x662F;&#x8DDF;Nuget&#x6709;&#x95DC;&#x5C31;&#x662F;&#xFF0C;&#x5E0C;&#x671B;&#x4E4B;&#x5F8C;&#x6703;&#x4FEE;&#x6B63;@@&#x201D; &#x65B0;&#x589E;&#x4E00;&#x500B;app.csx&#xFF0C;&#x5167;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 123using Newtonsoft.Json;var product = new {Name = &quot;Apple&quot;, Size = &quot;Small&quot;};Console.WriteLine(JsonConvert.SerializeObject(product)); &#x9019;&#x6642;&#x5019;&#x756B;&#x9762;&#x5C31;&#x6703;&#x8DD1;&#x51FA;1{&quot;Name&quot;:&quot;Apple&quot;,&quot;Size&quot;:&quot;Small&quot;} &#x5C31;&#x8DDF;&#x6211;&#x5011;&#x5E73;&#x5E38;&#x5BEB;C#&#x7684;&#x7A0B;&#x5F0F;&#x4E00;&#x6A23;&#x5F88;&#x795E;&#x5947;&#x5427;&#xFF5E; Link scriptcs.net]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Script C# - Hello World]]></title>
      <url>%2F2016%2F10%2F21%2FScript-CSharp-Hello-World%2F</url>
      <content type="text"><![CDATA[&#x5047;&#x8A2D;&#x5DF2;&#x7D93;&#x7528;chocolate&#x88DD;&#x597D;&#x4E86;Script C#&#x5F8C;&#x5148;&#x9032;&#x5165;cmd&#x5F8C;&#xFF0C;&#x8F38;&#x5165;scriptcs&#xFF0C;&#x5C31;&#x61C9;&#x8A72;&#x6703;&#x770B;&#x5230;&#x4EE5;&#x4E0B;&#x756B;&#x9762;123scriptcs (ctrl-c to exit or :help for help) &gt; &#x8F38;&#x5165;var message = &quot;Hello World&quot;;&#x7136;&#x5F8C;&#x518D;&#x8F38;&#x5165;Console.WriteLine(message);&#x9019;&#x6642;&#x5C31;&#x6703;&#x8DD1;&#x51FA;Hello World&#x4E86;&#xFF0C;&#x53EF;&#x4EE5;&#x53C3;&#x8003;&#x4E0B;&#x9762;&#x7684;code1234&gt; var message = &quot;Hello World&quot;;&gt; Console.WriteLine(message);Hello World&gt; &#x8981;&#x96E2;&#x958B;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x5C31;&#x76F4;&#x63A5;&#x6309;ctrl+c&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x8DF3;&#x51FA;&#x4E86;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Use Visual Studio Code as your TortoiseSVN diff tool]]></title>
      <url>%2F2016%2F10%2F17%2FUse-VSCode-as-your-TortoiseSVN-diff-tool%2F</url>
      <content type="text"><![CDATA[&#x4E0D;&#x56C9;&#x5506;&#xFF0C;&#x5148;&#x4E0A;&#x5716; &#x6307;&#x4EE4;&#x5982;&#x4E0B;1code.exe --wait --diff %base %mine --wait &#x7B49;&#x5F85;&#x9019;&#x500B;&#x8996;&#x7A97;&#x95DC;&#x9589;&#xFF0C;&#x7136;&#x5F8C;&#x8FD4;&#x56DE;&#x3002; --diff &#x958B;&#x555F;&#x4E00;&#x500B;&#x6BD4;&#x5C0D;&#x7528;&#x7684;editor&#xFF0C;&#x5F8C;&#x9762;&#x8981;&#x5E36;&#x5169;&#x500B;&#x6A94;&#x6848;&#x7684;&#x8DEF;&#x5F91;&#x7576;&#x53C3;&#x6578;(&#x4F8B;&#x5982;&#x4E0A;&#x5716;&#x7684; %base &#x8207; %mine) &#x76EE;&#x524D;&#x9084;&#x4E0D;&#x80FD;&#x62FF;&#x4F86;&#x7576;merge tool&#xFF0C;&#x5DF2;&#x54ED;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Script C# - 安裝篇]]></title>
      <url>%2F2016%2F10%2F12%2FScript-C-install%2F</url>
      <content type="text"><![CDATA[&#x9019;&#x9663;&#x5B50;&#x56E0;&#x61C9;&#x516C;&#x53F8;&#x9700;&#x6C42;&#xFF0C;&#x6240;&#x4EE5;&#x5B78;&#x4E86;ScriptC# &#x5927;&#x81F4;&#x4E0A;&#x5C31;&#x662F;&#x628A;C#&#x7576;&#x4F5C;Script Language&#x5BEB;XD &#x8981;&#x5B89;&#x88DD;&#x7684;&#x8A71; &#x53EF;&#x4EE5;&#x5F9E;chocolate&#x5B89;&#x88DD; 1C:\&gt; choco install scriptcs &#x9810;&#x8A2D;&#x5B89;&#x88DD;&#x4F4D;&#x7F6E;&#x70BA;&#xFF1A;%LOCALAPPDATA%\scriptcs\ &#x4F7F;&#x7528;chocolate&#x7684;&#x597D;&#x8655;&#x662F;&#x53EF;&#x4EE5;&#x7528;&#x5B83;&#x4F86;update package 1C:\&gt; choco upgrade scriptcs &#x4E5F;&#x53EF;&#x4EE5;&#x5F9E;powershell&#x88DD; shell1@powershell -NoProfile -ExecutionPolicy Unrestricted -Command &quot;iex ((New-Object Net.WebClient).DownloadSt@powershell -NoProfile -ExecutionPolicy Unrestricted -Command &quot;iex ((New-Object Net.WebClient).DownloadString(&apos;https://chocolatey.org/install.ps1&apos;))&quot; &amp;&amp; SET PATH=%PATH%;%systemdrive%\chocolatey\binring(&apos;https://chocolatey.org/install.ps1&apos;))&quot; &amp;&amp; SET PATH=%PATH%;%systemdrive%\chocolatey\bin &#x5982;&#x679C;&#x7528;powershell&#x5B89;&#x88DD;&#x6642;&#xFF0C;&#x9047;&#x5230;HTTP 407(proxy authentication is required)&#x6539;&#x6210;&#x7528;&#x4E0B;&#x9762;&#x7684;&#x6307;&#x4EE4;&#x88DD; shell1@powershell -NoProfile -ExecutionPolicy Unrestricted -Command &quot;[Net.WebRequest]::DefaultWebProxy.Credentials = [Net.CredentialCache]::DefaultCredentials; iex ((New-Object Net.WebClient).DownloadString(&apos;https://chocolatey.org/install.ps1&apos;))&quot; &amp;&amp; SET PATH=%PATH%;%systemdrive%\chocolatey\bin &#x63A5;&#x4E0B;&#x4F86;&#x8981;&#x8AAA;&#x5F97;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x8AAA;&#x4E09;&#x6B21;&#xFF01; &#x8981;&#x8A18;&#x5F97;&#x88DD;.Net Framework 4.6.2&#x4EE5;&#x4E0A;&#xFF01; &#x8981;&#x8A18;&#x5F97;&#x88DD;.Net Framework 4.6.2&#x4EE5;&#x4E0A;&#xFF01; &#x8981;&#x8A18;&#x5F97;&#x88DD;.Net Framework 4.6.2&#x4EE5;&#x4E0A;&#xFF01; &#x5B98;&#x65B9;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x4F3C;&#x4E4E;&#x6C92;&#x6709;&#x8B1B;&#x5230;&#x8981;&#x642D;&#x914D;&#x7684;.Net Version &#x5BE6;&#x6E2C;&#x5F8C;&#xFF0C;&#x5EFA;&#x8B70;&#x76F4;&#x63A5;&#x88DD;.Net Framework 4.6.2&#x4EE5;&#x4E0A;&#x7684;&#x7248;&#x672C; &#x5C31;&#x662F;&#x6709;&#x9047;&#x5230;Windows 7&#xFF0C;&#x53EF;&#x4EE5;&#x8DD1;(&#x88DD;&#x4E86;.Net Framework 4.6) &#x4F46;&#x662F;Windows Server 2012(&#x4E5F;&#x662F;&#x88DD;&#x4E86;.Net Framework 4.6)&#xFF0C;&#x4E0D;&#x80FD;&#x52D5;&#x554A;&#xFF01;&#xFF01;&#xFF01; &#x6162;&#x6162;&#x627E;&#x539F;&#x56E0;&#xFF0C;&#x624D;&#x767C;&#x73FE;&#x662F;&#x540C;&#x6A23;&#x662F;.Net 4.6&#xFF0C;&#x5B89;&#x88DD;&#x5728;Server 2012&#x4E0A;&#x7684;&#xFF0C;&#x6BD4;Win 7&#x9084;&#x820A;&#x4E00;&#x4E9B;&#x3002;(&#x8A73;&#x60C5;&#x8ACB;&#x53C3;&#x8003;&#x5FAE;&#x8EDF;How to: Determine Which .NET Framework Versions Are Installed]]></content>
    </entry>

    
  
  
</search>
